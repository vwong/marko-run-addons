<layout-doc>
  <h1>Session Management</h1>
  <p>
    This demonstrates how the server-side session can store arbitrary values. Here, it is just a simple visit counter.
  </p>
  <div>${$global.session.count} visits</div>

  <h2>Note about Session life</h2>
  <p>
    A session has a finite
    <code>maxAge</code>
    ${" "}life, usually about a month. However, without any write activity in the session to refresh it, it becomes possible that the underlying store, as well as the session cookie will eventually expire, even as the user continues to use it for read activity. The
    <code>session</code>
    ${" "}middleware automatically prolongs the life of both the underlying store, and the session cookie to guarantee a${" "}
    <code>minAge</code>
     value to reduce the risk of loosing the session.
  </p>

  <h2>Note about CSRF Tokens life</h2>
  <p>
    CSRF Tokens have short lives (about a typical session), and are rotated frequently to avoid replay attacks. If the user has been idle for a while, they may encounter an expired CSRF token. This will get regenerated on the next visit.
  </p>
</layout-doc>
