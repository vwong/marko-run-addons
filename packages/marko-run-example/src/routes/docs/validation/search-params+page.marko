import "#styles/button.scss";
import "#styles/link.scss";
import type { QuerySchema } from "./search-params+handler";

<let/errors=Object.fromEntries(
  $global.lastQueryErrors.map(({ name, message }) => [name, message]),
)>
<let/isPending=false>
<let/isError=false>

<layout-doc>
  <h1>Search Params</h1>

  <h2>With forms</h2>
  <p>
    This page validates search parameters. Try negative values to see an error.
  </p>
  <form/form class="form">
    <input-field
      data-touched="1"
      error=errors.page
      label="Page"
      name="page"
      type="number"
      value=(($global.query as QuerySchema)?.page)/>

    <button class="button" disabled=isPending || isError type="submit">
      Submit
    </button>
  </form>
  <p>
    <on-change-validate isError:=isError isPending:=isPending ref=form/>
  </p>

  <h2>With direct links</h2>
  <p>Alternatively, instead of form GETs, we can link URLs directly</p>
  <ul>
    <li>
      <a class="link" href="?page=1">
        Page 1
      </a>
    </li>
    <li>
      <a class="link" href="?page=-1">
        Page -1 (error)
      </a>
    </li>
  </ul>
</layout-doc>

<style.scss>
  .button {
    margin-top: $v-10;
  }
</style>
