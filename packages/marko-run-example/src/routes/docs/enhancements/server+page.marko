import "#styles/link.scss";
import type { Loader } from "./server+handler";

<let/loader=$global.loader as Loader>
<layout-doc>
  <h1>Server enhancements</h1>

  <p>
    The presence of client JS can be communicated via cookies to enable server-side enhancements that require client JS.
  </p>

  <p>
    For example, without client JS, streaming HTML must be generated sequentially, even if intermediate dynamic fragments may block later static fragments. With client JS, the server can generate these fragments out-of-order, to be reassembled in the correct order by the client. This reduces the time to contentful paint, making the page feel faster, even if the time to the${" "}
    <strong>last byte</strong>
     does not actually change.
  </p>

  <example-promise=loader.promise1 message="First result"/>

  <example-promise=loader.promise2 message="Second result"/>

  <p>
    But content proceeding it may appear immediately if client JS is available.
  </p>

  <p>
    This enhancement can be used to accelerate
    <em>subsequent</em>
    ${" "}pages, as the first page has to be assumed to be requested by a client without JS.
  </p>

  <p>
    With this enhancement, is important to consider any potential layout shift due to changing elements.
  </p>

  <p>Try loading this page with and without JS to experience the difference.</p>

  <a class="link" href="/docs/enhancements/server-500">
    Force a 500 error
  </a>
  <a class="link" href="/docs/enhancements/server-404">
    Programmatic 404
  </a>
  <a class="link" href="/unrouted-404">
    Static 404
  </a>
</layout-doc>
