// @ts-nocheck

<!-- use tags -->
export interface Input {
  src: string;
}

<let/key=0/>
<let/isPending=false/>
<let/isError=false/>
<let/isBrowser=false/>

<div class="random">
  <if=key>
    <micro-frame-client
      isError:=isError
      isPending:=isPending
      src=`${input.src}#${key}`
    >
      <@loading>
        <div>...</div>
      </@loading>
      <@catch|err: Error|>
        ${JSON.stringify(err)}
      </@catch>
    </micro-frame-client>
  </if>
  <else>
    <micro-frame-server src=input.src/>
  </else>

  <if=isBrowser>
    <button
      class="button"
      disabled=isPending
      onClick() {
        key++;
      }
    >
      Regenerate
    </button>
  </if>
</div>

<effect() {
  isBrowser = true;
}/>

<style-button/>
<style.scss>
  .random {
    align-items: center;
    display: flex;
    justify-content: space-between;
    margin-top: $v-10;
  }
</style>
