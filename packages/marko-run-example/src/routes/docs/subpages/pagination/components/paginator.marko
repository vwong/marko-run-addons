// @ts-nocheck

<!-- use tags -->
import "#styles/link.scss";
import { PageNavigator } from "@vwong/marko-run-addons/client";
export interface Input {
  current: number;
  frame: string;
  src: string;
}

<let/key=0/>
<let/isPending=false/>
<let/isError=false/>

<const/buildUrl=((page: number) => `${input.src}?page=${page}`)/>

<let/currentPage=input.current/>
<const/prevPage=Math.max(1, currentPage - 1)/>
<const/nextPage=currentPage + 1/>
<const/frameSrc=`${input.src}/_${input.frame}?page=${currentPage}`/>

<let/navigator=new PageNavigator({
  page: input.current,
  pageChange(page) {
    key++;
    currentPage = page;
  },
})/>

<nav>
  <ul>
    <li>
      <a
        class="link"
        href=buildUrl(prevPage)
        onClick=navigator.gotoPage(prevPage)
        rel="prev"
      >
        Previous
      </a>
    </li>
    <li>
      <a
        class="link"
        href=buildUrl(nextPage)
        onClick=navigator.gotoPage(nextPage)
        rel="next"
      >
        Next
      </a>
    </li>
  </ul>
</nav>

<div>
  <if=key>
    <micro-frame-client isError:=isError isPending:=isPending src=frameSrc>
      <@loading>
        <loader/>
      </@loading>
      <@catch|err: Error|>
        ${JSON.stringify(err)}
      </@catch>
    </micro-frame-client>
  </if>
  <else>
    <micro-frame-server src=frameSrc/>
  </else>
</div>
