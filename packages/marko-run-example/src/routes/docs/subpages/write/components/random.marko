// @ts-nocheck

<!-- use tags -->
import "#styles/button.scss";
export interface Input {
  src: string;
}

<let/key=0/>
<let/body=new URLSearchParams()/>
<let/isPending=false/>
<let/isError=false/>
<form/form
  action=input.src
  class="random"
  method="POST"
  onSubmit(event: Event) {
    event.preventDefault();
    body = new URLSearchParams(
      new FormData(form()) as unknown as URLSearchParams,
    );
    key++;
  }
>
  <if=key>
    <micro-frame-client
      fetch(url, options, fetch) {
        return fetch(url, {
          ...options,
          method: "POST",
          headers: {
            ...options.headers,
            "Content-Type": "application/x-www-form-urlencoded",
          },
          body,
        });
      }
      isError:=isError
      isPending:=isPending
      src=`${input.src}#${key}`
    >
      <@loading>
        <div>...</div>
      </@loading>
      <@catch|err: Error|>
        ${JSON.stringify(err)}
      </@catch>
    </micro-frame-client>
  </if>
  <else>
    <micro-frame-server src=input.src/>
  </else>
  <button class="button" disabled=isPending type="submit">
    Regenerate
  </button>
</form>

<style.scss>
  .random {
    align-items: center;
    display: flex;
    justify-content: space-between;
    margin-top: $v-10;
  }
</style>
