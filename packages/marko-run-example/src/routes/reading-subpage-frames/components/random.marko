// @ts-nocheck

<!-- use tags -->
export interface Input {
  src: string;
}

<let/key=0/>
<let/isPending=false/>
<let/isError=false/>
<div class="random">
  <if=key>
    <micro-frame
      fetch(url, options, fetch) {
        return fetch(url, {
          ...options,
          credentials: "same-origin",
        })
          .catch(() => {
            isError = true;
          })
          .finally(() => {
            isPending = false;
          });
      }
      src=`${input.src}#${key}`
    >
      <@loading>
        <div>...</div>
      </@loading>
      <@catch|err: Error|>
        ${JSON.stringify(err)}
      </@catch>
    </micro-frame>
  </if>
  <else>
    <micro-frame src=input.src/>
  </else>
  <button
    class="button"
    disabled=isPending
    onClick() {
      isPending = true;
      isError = false;
      key++;
    }
  >
    Regenerate
  </button>
</div>

<style-button/>
<style.scss>
  .random {
    align-items: center;
    display: flex;
    justify-content: space-between;
    margin-top: $v-10;
  }
</style>
