export interface Input {
  index?: number;
  ref: () => HTMLElement;
}

<let/index=input.index || 0>
<script>
  const root = input.ref();
  const items = root.querySelectorAll("a, button");
  const N = items.length;
  root.addEventListener(
    "keydown",
    (event: KeyboardEvent) => {
      switch (event.key) {
        case "ArrowDown":
        case "ArrowRight":
          event.preventDefault();
          index = (index + 1) % N;
          break;
        case "ArrowUp":
        case "ArrowLeft":
          event.preventDefault();
          index = (index + N - 1) % N;
          break;
      }
    },
    {
      signal: $signal,
    },
  );
</script>
<script>
  const root = input.ref();
  const items = root.querySelectorAll("a, button") as NodeListOf<HTMLElement>;
  for (const el of items) {
    el.setAttribute("tabindex", "-1");
  }
  const el = items[index];
  el.setAttribute("tabindex", "0");
  el.focus();
</script>
