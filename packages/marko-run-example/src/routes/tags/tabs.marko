export interface Input {
  current: string;
  navKey: string;
  tab?: Marko.AttrTag<{
    href: string;
    src: string;
    title: string;
  }>;
}

<let/isPending=false>
<let/isError=false>
<let/page=input.current>

<on-navigation/gotoPage:=page navKey=input.navKey/>

<ul class="tabs">
  <for|{ href, src, title }| of=input.tab>
    <li class="tabs__tab">
      <a
        aria-current=page === src && "page"
        class="no-prerender"
        href=href
        onClick=gotoPage(src)>
        ${title}
      </a>
    </li>
  </for>
</ul>

<div class="tabs__contents">
  <fragment
    isError:=isError
    isPending:=isPending
    src=`${$global.url.pathname}/~tab/${page}`>
    <@error>
      <notification level="error">
        Unable to retrieve tab
      </notification>
    </@error>
  </fragment>
</div>

<style.scss>
  $border: 1px solid $foreground-color-neutral-60;

  .tabs {
    display: flex;
    padding: 0;

    &__tab {
      border: $border;
      border-radius: $radius-m $radius-m 0 0;
      display: flex;

      & + & {
        margin-left: -1px;
      }
    }

    &__contents {
      border: $border;
      border-radius: 0 $radius-m $radius-m;
      margin-top: -1px;
      min-height: 5rem;
      padding: $v-10 $s-16;
    }

    & a {
      --highlight: transparent;

      border-radius: $radius-m $radius-m 0 0;
      border-top: 4px solid var(--highlight);
      padding: $v-5 $s-16;

      &:hover {
        --highlight: #{$foreground-color-neutral-60};
      }

      &[aria-current="page"] {
        --highlight: #{$foreground-color-accent};
      }
    }
  }
</style>
