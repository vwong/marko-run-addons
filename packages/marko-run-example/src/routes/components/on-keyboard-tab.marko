<!-- use tags -->
export interface Input {
  for: string;
  initialIndex?: number;
}

<let/index=input.initialIndex || 0/>
<effect() {
  const root = document.getElementById(input.for)!;
  const items = root.querySelectorAll("a, button");
  const N = items.length;
  document
    .getElementById(input.for)!
    .addEventListener("keydown", (event: KeyboardEvent) => {
      switch (event.key) {
        case "ArrowDown":
        case "ArrowRight":
          index = (index + 1) % N;
          break;
        case "ArrowUp":
        case "ArrowLeft":
          index = (index + N - 1) % N;
          break;
      }
    });
}/>
<effect() {
  const root = document.getElementById(input.for)!;
  const items = root.querySelectorAll("a, button") as NodeListOf<HTMLElement>;
  for (const el of items) {
    el.setAttribute("tabindex", "-1");
  }
  const el = items[index];
  el.setAttribute("tabindex", "0");
  el.focus();
}/>
